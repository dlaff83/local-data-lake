name: local-data-lake
services:
  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS}
    ports:
      - "${MINIO_PORT_1}:9000"
      - "${MINIO_PORT_2}:9001"
    volumes:
      - ./minio/data:/data
    networks:
      - datalake

  airflow-postgres:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${AIRFLOW_POSTGRES_DB}
      POSTGRES_USER: ${AIRFLOW_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_POSTGRES_PASSWORD}
    ports:
      - ${AIRFLOW_POSTGRES_PORT}:5432
    networks:
      - datalake

  airflow-webserver:
    image: apache/airflow
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: False
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@airflow-postgres/airflow
      
    ports:
      - 8080:8080
    #Creates a root user for the airflow instance
    command: bash -c "airflow db init && airflow users create \
      --username ${AIRFLOW_ROOT_USERNAME} \
      --password ${AIRFLOW_ROOT_PASSWORD} \
      --firstname ${AIRFLOW_FIRSTNAME} \
      --lastname ${AIRFLOW_LASTNAME} \
      --role ${AIRFLOW_ROLE} \
      --email ${AIRFLOW_EMAIL} && airflow webserver"
    depends_on:
      - airflow-postgres
    networks:
      - datalake
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      
  airflow-scheduler:
    image: apache/airflow
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: False
      #This executor is only for local development.
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@airflow-postgres/airflow
    #Starts the airflow scheduler  
    command: airflow scheduler
    depends_on:
      - airflow-webserver
    networks:
      - datalake
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags

networks:
  datalake:
    driver: bridge
